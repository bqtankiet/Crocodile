package vn.edu.hcmuaf.fit.crocodile.service;

import jakarta.mail.*;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import vn.edu.hcmuaf.fit.crocodile.config.properties.MailProperties;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class SendEmailService {
    public static final String CONTENT_TYPE_HTML_UTF8 = "text/html; charset=utf-8";
    public static final String CONTENT_TYPE_TEXT_PLAIN = "text/plain";

    private static final String MAIL_FROM = MailProperties.sender();
    private static final String APP_PASSWORD = MailProperties.appPassword();

    private Session getEmailSession() {
        return Session.getInstance(MailProperties.getGmailProperties(), new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(MAIL_FROM, APP_PASSWORD);
            }
        });
    }

    public boolean sendEmail(String recipient, String subject, String content, String contentType) {
        try {
            Message message = new MimeMessage(getEmailSession());
            message.setFrom(new InternetAddress(MAIL_FROM));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipient));
            message.setSubject(subject);
            message.setContent(content, contentType);

            // G·ª≠i email
            Transport.send(message);
            System.out.println("Email sent successfully to: " + recipient);
            return true;
        } catch (MessagingException e) {
            System.err.println("Failed to send email to " + recipient + ": " + e.getMessage());
            return false;
        }
    }

    public boolean sendEmail(String recipient, String subject, String content) {
        return sendEmail(recipient, subject, content, CONTENT_TYPE_TEXT_PLAIN);
    }

    public boolean sendWelcomeEmail(String email, String fullName, String activationLink) {
        if (email == null || email.trim().isEmpty()) {
            System.out.println("No email provided, skipping welcome email.");
            return false;
        }

        String subject = "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Crocodile!";
        String content = getHtmlWelcome(fullName, activationLink);

        return sendEmail(email, subject, content, CONTENT_TYPE_HTML_UTF8);
    }

    /**
     * G·ª≠i email c·∫£nh b√°o b·∫£o m·∫≠t khi ph√°t hi·ªán spam ƒëƒÉng nh·∫≠p
     * @param email Email ng∆∞·ªùi d√πng
     * @param fullName T√™n ƒë·∫ßy ƒë·ªß c·ªßa ng∆∞·ªùi d√πng
     * @param clientIP ƒê·ªãa ch·ªâ IP c·ªßa k·∫ª t·∫•n c√¥ng
     * @param userAgent User agent c·ªßa browser
     * @param attemptTime Th·ªùi gian x·∫£y ra s·ª± vi·ªác
     * @return true n·∫øu g·ª≠i th√†nh c√¥ng
     */
    public boolean sendSecurityAlertEmail(String email, String fullName, String clientIP, String userAgent, LocalDateTime attemptTime) {
        if (email == null || email.trim().isEmpty()) {
            System.out.println("No email provided, skipping security alert email.");
            return false;
        }

        String subject = "üö® C·∫£nh b√°o b·∫£o m·∫≠t t√†i kho·∫£n Crocodile";
        String content = getSecurityAlertEmailContent(fullName, clientIP, userAgent, attemptTime);

        return sendEmail(email, subject, content, CONTENT_TYPE_HTML_UTF8);
    }

    /**
     * T·∫°o n·ªôi dung email c·∫£nh b√°o b·∫£o m·∫≠t
     * @param userName T√™n ng∆∞·ªùi d√πng
     * @param clientIP ƒê·ªãa ch·ªâ IP
     * @param userAgent User agent
     * @param attemptTime Th·ªùi gian
     * @return N·ªôi dung HTML email
     */
    public String getSecurityAlertEmailContent(String userName, String clientIP, String userAgent, LocalDateTime attemptTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        String formattedTime = attemptTime.format(formatter);

        String html = """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>C·∫£nh b√°o b·∫£o m·∫≠t Crocodile</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f5f5f5; }
                    .container { width: 600px; margin: 0 auto; background-color: #ffffff; }
                    .header { background-color: #dc3545; color: white; padding: 20px; text-align: center; }
                    .content { padding: 30px; }
                    .alert-box { background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0; }
                    .info-table { width: 100%%; border-collapse: collapse; margin: 20px 0; }
                    .info-table td { padding: 10px; border: 1px solid #ddd; }
                    .info-table .label { background-color: #f8f9fa; font-weight: bold; width: 30%%; }
                    .footer { background-color: #f4f4f4; padding: 15px; text-align: center; color: #666666; font-size: 12px; }
                    .security-tips { background-color: #e7f3ff; border-left: 4px solid #2196F3; padding: 15px; margin: 20px 0; }
                </style>
            </head>
            <body>
            <div class="container">
                <div class="header">
                    <h1 style="margin: 0; font-size: 24px;">üö® C·∫£nh b√°o b·∫£o m·∫≠t</h1>
                </div>
                
                <div class="content">
                    <h2 style="color: #dc3545;">Xin ch√†o %s,</h2>
                    
                    <div class="alert-box">
                        <strong>‚ö†Ô∏è Ph√°t hi·ªán ho·∫°t ƒë·ªông ƒëƒÉng nh·∫≠p b·∫•t th∆∞·ªùng!</strong><br>
                        Ch√∫ng t√¥i ƒë√£ ph√°t hi·ªán c√≥ ng∆∞·ªùi th·ª≠ ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n c·ªßa b·∫°n v·ªõi m·∫≠t kh·∫©u sai <strong>5 l·∫ßn li√™n t·ª•c</strong>. 
                        T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c kh√≥a t·∫°m th·ªùi trong <strong>15 ph√∫t</strong> ƒë·ªÉ b·∫£o v·ªá an to√†n.
                    </div>
                    
                    <h3>Th√¥ng tin chi ti·∫øt:</h3>
                    <table class="info-table">
                        <tr>
                            <td class="label">Th·ªùi gian:</td>
                            <td>%s</td>
                        </tr>
                        <tr>
                            <td class="label">ƒê·ªãa ch·ªâ IP:</td>
                            <td>%s</td>
                        </tr>
                        <tr>
                            <td class="label">Thi·∫øt b·ªã/Tr√¨nh duy·ªát:</td>
                            <td>%s</td>
                        </tr>
                        <tr>
                            <td class="label">Tr·∫°ng th√°i:</td>
                            <td><span style="color: #dc3545; font-weight: bold;">T√†i kho·∫£n t·∫°m kh√≥a 15 ph√∫t</span></td>
                        </tr>
                    </table>
                    
                    <div class="security-tips">
                        <h3 style="margin-top: 0;">üõ°Ô∏è Khuy·∫øn ngh·ªã b·∫£o m·∫≠t:</h3>
                        <ul>
                            <li><strong>N·∫øu ƒë√¢y l√† b·∫°n:</strong> Vui l√≤ng ƒë·ª£i 15 ph√∫t v√† th·ª≠ l·∫°i v·ªõi m·∫≠t kh·∫©u ch√≠nh x√°c.</li>
                            <li><strong>N·∫øu ƒë√¢y kh√¥ng ph·∫£i l√† b·∫°n:</strong> T√†i kho·∫£n c·ªßa b·∫°n c√≥ th·ªÉ ƒëang b·ªã t·∫•n c√¥ng. H√£y th·ª±c hi·ªán c√°c bi·ªán ph√°p sau:
                                <ul style="margin-top: 10px;">
                                    <li>ƒê·ªïi m·∫≠t kh·∫©u ngay l·∫≠p t·ª©c</li>
                                    <li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh (√≠t nh·∫•t 8 k√Ω t·ª±, bao g·ªìm ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát)</li>
                                    <li>Ki·ªÉm tra c√°c thi·∫øt b·ªã ƒë√£ ƒëƒÉng nh·∫≠p</li>
                                    <li>B·∫≠t x√°c th·ª±c 2 b∆∞·ªõc n·∫øu c√≥ th·ªÉ</li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                    
                    <p style="margin-top: 30px;">
                        <strong>L∆∞u √Ω:</strong> Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông. N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá v·ªõi ƒë·ªôi ng≈© h·ªó tr·ª£ kh√°ch h√†ng c·ªßa ch√∫ng t√¥i.
                    </p>
                    
                    <p style="color: #666666; font-size: 14px; margin-top: 20px;">
                        C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• Crocodile. Ch√∫ng t√¥i lu√¥n n·ªó l·ª±c ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n c·ªßa b·∫°n.
                    </p>
                </div>
                
                <div class="footer">
                    ¬© 2024 Crocodile. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.<br>
                    Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.
                </div>
            </div>
            </body>
            </html>
            """;

        return String.format(html,
                userName != null ? userName : "Kh√°ch h√†ng",
                formattedTime,
                clientIP != null ? clientIP : "Kh√¥ng x√°c ƒë·ªãnh",
                userAgent != null ? userAgent : "Kh√¥ng x√°c ƒë·ªãnh"
        );
    }

    private String getHtmlWelcome(String userName, String activationLink) {
        String html = """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>Welcome to Crocodile</title>
            </head>
            <body style="font-family: Arial, sans-serif; margin: 0; padding: 0;">
            <table style="width: 600px; margin: 0 auto; border: 1px solid #ddd; border-collapse: collapse;">
                <tr>
                    <td style="padding: 20px;">
                        <h2 style="margin: 0; color: #333333; font-size: 24px; text-align: center; padding: 1rem 0;">
                            Ch√†o m·ª´ng %s ƒë·∫øn v·ªõi Crocodile!
                        </h2>
                        <p style="color: #666666; font-size: 0.9rem; line-height: 1.5; margin-top: 10px;">
                            ƒê·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n c·ªßa b·∫°n, vui l√≤ng nh·∫•n v√†o li√™n k·∫øt sau: 
                            <a href="%s">K√≠ch ho·∫°t t√†i kho·∫£n</a>
                        </p>
                        <p style="color: #666666; font-size: 0.9rem; line-height: 1.5; margin-top: 10px;">
                            Ch√∫ng t√¥i r·∫•t vui m·ª´ng khi b·∫°n tr·ªü th√†nh m·ªôt ph·∫ßn c·ªßa gia ƒë√¨nh Crocodile. H√£y t·∫≠n h∆∞·ªüng h√†nh tr√¨nh mua s·∫Øm ƒë·∫ßy th√∫ v·ªã v√† ƒë·∫≥ng c·∫•p t·∫°i Crocodile.
                        </p>
                    </td>
                </tr>
                <tr>
                    <td style="background-color: #f4f4f4; padding: 10px; text-align: center; color: #666666; font-size: 12px;">
                        ¬© 2024 Crocodile. M·ªçi quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
                    </td>
                </tr>
            </table>
            </body>
            </html>
            """;
        return String.format(html, userName, activationLink);
    }
}